---
title: "OpenAlex Sandbox"
format: html
---

```{r}
library(targets)
library(tidyverse)
library(openalexR)
```



## Develop filter for PMID, PMC, or DOAJ

```{r}
source("R/filter_for_pubmed_pmc_or_doaj.R")
source("R/add_ris.R")

new_entries <-
    tar_read(oa_consolidated_records) |> 
    anti_join(tar_read(oa_inpc_raw), by = "id")
    

cat(new_entries$ris, sep = "\n\n", file = "all_entries_except_inpc_2023_08_31.ris")
```


## Other

```{r}
openalexR::oa_query(
    
)

library(openalexR)

oa_fetch(
    entity = "works",
    from_publication_date = "2013-07-01",
    to_publication_date = "2023-03-31",
    institutions.ror = c(
        "https://ror.org/01kg8sb98", # IU
        "https://ror.org/02k40bc56", # IU Bloomington
        "https://ror.org/01aaptx40", # IU Health
        "https://ror.org/05gxnyn08", # IUPUI
        "https://ror.org/022t7q367" # Indiana CTSI
    ),
    search = c("\"electronic health record\" OR \"electronic medical record\""),
    count_only = TRUE
)

test_work <- oa_random(output = "list")

all_queries <- list(oa_inpc_raw, oa_ihie_raw, oa_regenstrief_institution_raw, oa_regenstrief_search_raw)



merged_queries <- purrr::reduce(all_queries, bind_unique_records)
adding_iu <- purrr::reduce(
    list(merged_queries, test_iu), 
    bind_unique_records
)

inpc_since_2013 <-
    oa_fetch(
        entity = "works",
        from_publication_date = "2013-07-01",
        to_publication_date = "2023-03-31",
        search = "regenstrief"
    )

inpc_since_2013_obj <-
    oa_query(
        entity = "works",
        from_publication_date = "2013-07-01",
        to_publication_date = "2023-03-31",
        search = "\"indiana network for patient care\"",
    ) |> 
    oa_request()

ihie_since_2013 <-
    oa_fetch(
        entity = "works",
        from_publication_date = "2013-07-01",
        to_publication_date = "2023-03-31",
        search = "\"indiana health information exchange\""
    )

anti_join(ihie_since_2013, inpc_since_2013, by = "id")
```


```{r}
inpc_bibliometrix <- oa2bibliometrix(inpc_since_2013)
ihie_bibliometrix <- oa2bibliometrix(ihie_since_2013)
glimpse

inpc_bibliometrix |> 
    mutate(
        id_oa = paste0("https://openalex.org/",id_oa)
    ) |> 
    full_join(inpc_since_2013, by = c("id_oa" = "id")) |> 
    select(id_oa, type, DT) |> 
    distinct(type, DT) |> 
    glimpse()

oa_consolidated_records |> 
    select(type) |> 
    distinct()
```
```{r}
oa_iu_health_records_raw |> 
    group_by(type) |> 
    summarize(n = n())
```
```{r}
oa_fetch(
    entity = "works",
    from_publication_date = "2013-07-01",
    to_publication_date = "2023-03-31",
    institutions.ror = c(
        "https://ror.org/01kg8sb98", # IU
        "https://ror.org/02k40bc56", # IU Bloomington
        "https://ror.org/01aaptx40", # IU Health
        "https://ror.org/05gxnyn08", # IUPUI
        "https://ror.org/022t7q367" # Indiana CTSI
    ),
    language = "en",
    title.search = "\"electronic health record\" OR EHR OR \"electronic medical record\" OR EMR",
    count_only = TRUE
) 

oa_iu_health_records_raw |> 
    select(
        work_id = id,
        ids
    ) |> 
    unnest(ids) |> 
    mutate(
        type = 
            case_when(
                str_detect(ids, "^https://open") ~ "openalex",
                str_detect(ids, "^https://doi") ~ "doi",
                str_detect(ids, "^https://www.ncbi") ~ "pmc_id",
                str_detect(ids, "^https://pubmed") ~ "pubmed_id",
                str_detect(ids, "^[0-9]") ~ "mag_id"
            )
    ) |> 
    filter(type != "openalex") |> 
    pivot_wider(names_from = type, values_from = ids) |> 
    filter(!is.na(pubmed_id) | !is.na(pmc_id))
```



```{r}
source("R/ris_authorify.R")
source("R/add_ris.R")

oa_consolidated_records |> 
    add_ris()
```


```{r}
test_mutation <- 
    oa|>
    separate_wider_regex(
        doi, 
        patterns = c(
            doi_url = "https://doi.org/", 
            doi_id = ".*"
        )
    ) |>
    mutate(
        TY = case_when(
            type == "article" ~ "JOUR",
            type == "journal-article" ~ "JOUR",
            type == "book-chapter" ~ "CHAP",
            type == "letter" ~ "GEN",
            type == "editorial" ~ "GEN",
            type == "erratum" ~ "GEN",
            type == "other" ~ "GEN"
        ),
        AU = map(
            .x = author,
            .f = ~ris_authorify(.x$au_display_name)
        ),
        RIS = paste0(
            "TY  - ",TY,"\n",
            "DO  - ",doi_id,"\n",
            "UR  - ",url,"\n",
            "TI  - ",display_name,"\n",
            "T2  - ",so,"\n",
            AU,"\n",
            "PY  - ",publication_year,"\n",
            "DA  - ",publication_date,"\n",
            "AB  - ",ab,"\n",
            "PB  - ",host_organization,"\n",
            "SP  - ",first_page,"\n",
            "EP  - ",last_page,"\n",
            "IS  - ",issue,"\n",
            "VL  - ",volume,"\n",
            "SN  - ",issn_l,"\n",
            "ER  - "
        )
    )

cat(test_mutation$RIS, file = "temp.txt", sep = "\n\n")
```


```{r}
authorify_test_output <- ris_authorify(author_test_vector)

cat(authorify_test_output, file = "temp.txt", sep = "")


test_mutation <- 
    inpc_since_2013 |> 
    head() |> 
    mutate(
        TY = case_when(
            type == "article" ~ "JOUR",
            type == "book-chapter" ~ "CHAP",
            type == "letter" ~ NA
        ),
        AU = map(
            .x = author,
            .f = ~ris_authorify(.x$au_display_name)
        ),
        RIS = 
            paste0(
                "TY  - ",TY,"\n",
                AU,"\n"
            )
    ) |> 
    select(RIS)
    

cat(test_mutation$RIS, file = "temp.txt", sep = "\n")
```


```{r}
inpc_since_2013 |> 
    filter(is.na(doi)) |> 
    select(id, ids) |> 
    unnest(ids) 
    
inpc_since_2013 |> 
    filter(!is.na(doi)) |> 
    separate_wider_regex(doi, patterns = c(doi_url = "https://doi.org/", doi_id = ".*")) |> 
    select(doi_url, doi_id) |> 
    pull(doi_id) |> 
    cat(
        file = "temp.txt",
        sep = ", "
    )

inpc_since_2013 |> 
    filter(str_detect(display_name, "Medical, Social, and Legal Risks")) |> 
    select(id, url, doi) |> 
    view()

inpc_since_2013 |> 
    select(!where(is.list)) |> 
    arrow::write_parquet("data/inpc_since_2013.parquet")


```


```{r}
regenstrief_works_2d |> 
    mutate(
        publication_decade = 
            case_when(
                publication_year >= 1973 & publication_year <= 1982 ~ "1973-1982",
                publication_year >= 1983 & publication_year <= 1992 ~ "1983-1992",
                publication_year >= 1993 & publication_year <= 2002 ~ "1993-2002",
                publication_year >= 2003 & publication_year <= 2012 ~ "2003-2012",
                publication_year >= 2013 & publication_year <= 2022 ~ "2013-2022",
                publication_year >= 2023 & publication_year <= 2032 ~ "2023-2032"
            )
    ) |> 
    group_by(publication_decade) |> 
    summarize(n = n())

regenstrief_works |> 
    select(work_id = id, grants) |> 
    unnest() |> 
    filter(!is.na(grants)) 
```



```{bash}
#cd data/regenstrief_from_openalex
#dolt add works
#dolt commit -m "Adding core works table"
```

```{r}
show_query(
    tbl(dolt(), "works") |> 
    filter(publication_year > 2012) |> 
    filter(str_detect(ab, "INPC"))
)
```


```{r}
regenstrief_mags <-
    regenstrief_works_2013_2022 |> 
    select(id, ids) |> 
    unnest() |> 
    filter(name == "mag") |> 
    select(openalex_id = id, mag_id = value) |> 
    as_arrow_table()
```




```{}

```


```{r}
works_brian_dixon <-
    oa_fetch(
        entity = "works",
        author.orcid = "https://orcid.org/0000-0002-1121-0607",
        verbose = TRUE
    )

works_daniel_riggins <-
    oa_fetch(
        entity = "works",
        author.orcid = "https://orcid.org/0000-0002-6240-6212",
        verbose = TRUE
    )

glimpse(works_daniel_riggins)
```

```{r}
works_brian_dixon |> 
    select(work_id = id, concepts) |> 
    unnest(concepts) |> 
    rename(concept_id = id) |> 
    filter(level == 5) |> 
    group_by(display_name) |> 
    summarise(n = n()) |> 
    arrange(desc(n))
```

```{r}
regenstrief_works_2013_2022 |> 
    select(work_id = id, author) |> 
    unnest(author) |> 
    distinct(work_id, institution_display_name) |> 
    group_by(institution_display_name) |> 
    summarise(n = n()) |> 
    arrange(desc(n))
```

## Playing with Small Teams dataset

```{r}
library(arrow)
library(tidyverse)

small_teams <- 
    read_tsv_arrow(
        "data/Aggregated_20210521.txt",
        col_names = c("mag_id", "year", "field", "team_size", "citations", "disruption"),
        col_types = "ciiiin",
        as_data_frame =  FALSE
    ) |> 
    filter(year > 2012) |> 
    select(mag_id, disruption) |> 
    collect() |> 
    as_arrow_table()

head(small_teams) |>  collect()

con <- file("data/Aggregated_20210521.txt","r")
first_line <- readLines(con,n=1)
close(con)

left_join(regenstrief_mags, small_teams, by = "mag_id") |> 
    collect() |> 
    filter(!is.na(disruption)) |> 
    arrange(disruption)
```

